#Docker-compose for running a Recogito image with the official Elasticsearch
#image as its ES backend. The database server is assumed to be external to
#Docker.

name: recogito
services:
# The elasticsearch configuration - options are essentially lifted straight
# from the sample compose file in the official documentation at 
# https://www.elastic.co/guide/en/elasticsearch/reference/5.6/docker.html
# Note, though, that we are only running a single instance, which might or
# might not be wise.
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.16
    container_name: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: "65536"
        hard: "65536"
    deploy: 
      resources:
        limits:
          memory: 2g
    #networks:
    #  - intranet

  postgres:
    image: postgres:9.5
    container_name: postgres
    #ports:
    #  - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: admin@123
      POSTGRES_USER: postgres
    #networks:
    #  - intranet

# The recogito image. Nothing terribly special here. We bind mount the
# configuration from the local file system, expose the right ports, mount a
# volume for persistent data, and finally we sleep a short time while the
# ES service gets ready. 
  recogito:
    image: recogito-slim # Or whatever you have tagged your dockerimage
    container_name: recogito
    volumes:
     - type: bind
       source: ./application.conf
       target: /opt/recogito/conf/application.conf
     - recogitodata:/opt/recogito/uploads/
    #ports: 
    # - 9000:9000
    #networks:
    #  - intranet
    command: bin/recogito2
    depends_on:
      - postgres
      - elasticsearch

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./snakeoil.crt
        target: /etc/ssl/certs/recogito.crt
      - type: bind
        source: ./snakeoil.key
        target: /etc/ssl/private/recogito.key
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
    depends_on:
      - recogito
    #networks:
    #  - intranet

#networks:
#  intranet:

# Quick and unoptimized volume configuration. Make sure to backup these
# volumes for persistence.  
volumes:
  recogitodata:
    driver: local
  esdata:
    driver: local
  pgdata:
    driver: local

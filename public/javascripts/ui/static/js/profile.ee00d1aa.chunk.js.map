{"version":3,"sources":["common/documents/table/Columns.js","common/Modal.jsx","common/documents/Selection.js","common/account/Avatar.jsx","common/documents/FiledropHint.jsx","common/documents/table/rows/TypeIcons.js","profile/operations/forkDocument/index.js","profile/operations/sendMessage/index.js","profile/operations/index.js","profile/initialState.js","profile/sidebar/Sidebar.jsx","profile/top/TopBar.jsx","profile/Profile.jsx","profile/App.jsx","common/header/HeaderIcon.jsx","common/header/Breadcrumbs.jsx","common/documents/Readme.jsx","common/account/IdentityInfo.jsx","common/account/ActivityHistory.jsx","common/account/TopCollaborators.jsx","common/documents/table/rows/BaseRowComponent.jsx","common/documents/table/rows/DocumentRow.jsx","common/documents/table/rows/FolderRow.jsx","common/documents/table/rows/HeaderRow.jsx","common/documents/table/preferences/ColumnOrder.jsx","common/documents/table/preferences/PreferencesModal.jsx","common/documents/table/TablePane.jsx","common/documents/grid/Document.jsx","common/documents/grid/Folder.jsx","common/documents/grid/GridPane.jsx"],"names":["COLUMNS_SHARED_WITH_ME","COLUMNS","concat","HEADER_NAMES","author","title","language","date_freeform","uploaded_at","last_edit_at","last_edit_by","my_last_edit_at","annotations","my_annotations","public_visibility","status_ratio","cloned_from","has_clones","owner","shared_by","access_level","COLUMN_WIDTH","agg_document","AGGREGATE_COLUMNS","Columns","Object","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_simonr_Workspaces_pelagios_recogito2_workspace_frontend_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","field","w","columns","reduce","result","startsWith","push","view","filter","c","includes","Modal","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","props","react_draggable__WEBPACK_IMPORTED_MODULE_6___default","handle","onClick","onClose","children","Component","Selection","selectedItems","_this","selectItem","item","isCtrlPressed","thisIdx","_selection","indexOf","isSelected","cloned","slice","splice","selectRange","allItems","toIdx","selectedIndices","map","minIdx","Math","min","apply","maxIdx","max","isOutside","from","to","length","type","filetypes","find","ft","idx","i","evt","isShift","getModifierState","isCtrl","newSelection","preventDefault","Avatar","str","hash","charCodeAt","color","username","stringToHslColor","style","backgroundColor","charAt","toUpperCase","AnimatedDiv","posed","div","open","bottom","transition","ease","duration","closed","FiledropHint","state","visible","setState","pose","ICONS","TEXT_PLAIN","TEXT_TEIXML","IMAGE_UPLOAD","IMAGE_IIIF","DATA_CSV","MAP_WMTS","MAP_XYZ","TypeIcons","get","docType","ForkingModal","errorMessage","_this2","minWait","Promise","resolve","setTimeout","op","axios","post","documentId","catch","error","response","status","all","then","onComplete","react_default","SendMessageForm","message","onChange","target","onCancel","htmlFor","disabled","id","recipient","rows","onSend","operations","forkDocument","container","document","body","appendChild","render","forkDocument_ForkingModal","remove","sendMessage","sendMessage_SendMessageForm","DEFAULT_STATE","me","visitedAccount","presentation","page","breadcrumbs","readme","total_count","items","selection","table_config","sorting","by","asc","busy","initialState","stored","localStorage","getItem","JSON","parse","objectSpread","persistState","prefixed","setItem","stringify","Sidebar","IdentityInfo","account","feature_toggles","onSendMessage","ActivityHistory","width","height","fill","stats","TopCollaborators","TopBar","href","name","real_name","Fragment","src","alt","logged_in","loggedInAs","notLoggedIn","Profile","canFork","isSingleDocument","TopBar_TopBar","sidebar_Sidebar","Breadcrumbs","label","path","docCount","total_docs","react_transition_group","in","timeout","classNames","onFork","HeaderIcon","icon","onTogglePresentation","Readme","content","TablePane","config","tableConfig","enableFiledrop","onSelect","onSort","onSortTable","onChangeColumnConfig","GridPane","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onKeydown","which","isEmpty","deleteSelection","onMousedown","querySelector","contains","refreshPage","folderId","location","substring","_profileOwner","expandAggregatedColumns","sort","r","_r$data","data","prev","togglePresentation","select","sortTable","changeColumnConfig","sender","forkSelection","doc","window","pathname","_rootEl","getElementById","onhashchange","addEventListener","b","removeEventListener","profile_Profile","App_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","link","VIEW_LABELS","MY_DOCUMENTS","SHARED_WITH_ME","SEARCH","undefined","INITIAL_STATE","editing","modifiedContent","ctrlKey","onSave","_","onDelete","onUpdate","react_markdown__WEBPACK_IMPORTED_MODULE_6___default","source","onEdit","bind","react_sane_contenteditable__WEBPACK_IMPORTED_MODULE_7__","tagName","editable","multiLine","editOnOpen","renderEdit","renderView","url","replace","dataAvailable","member_since","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_6__","Intl","DateTimeFormat","year","month","day","format","Date","bio","website","formatURL","LINE_STYLE","stroke","strokeWidth","AXIS_STYLE","fontSize","tickFormatter","tick","toTimestamp","empty","Array","arr","last","reverse","timestamp","t","toTime","getTime","createEmptySeries","timeseries","over_time","date","padTimeseries","react_number_format__WEBPACK_IMPORTED_MODULE_7___default","displayType","total_contributions","thousandSeparator","recharts__WEBPACK_IMPORTED_MODULE_6__","barCategoryGap","computeChart","strokeDasharray","horizontal","dataKey","axisLine","tickSize","tickCount","tickLine","domain","padding","left","right","collaborators","fetchCollaborators","user","_Avatar_jsx__WEBPACK_IMPORTED_MODULE_7__","BaseRowComponent","updateTotalRowSpan","next","_totalSpan","total","getSpan","FORMATTERS","datetime","lib_default","visibility","level","number_format_default","ratio","verified","unverified","not_identifiable","pctGreen","pctYellow","labels","tooltip","count","clonedFrom","hasClones","AGGREGATE_FIELDS","DocumentRow","prototype","formatter","selected","createAggregateField","createField","Icons","FolderRow","makeEditable","_input","stopPropagation","onKeyPress","onRename","ref","onKeyDown","HeaderRow","sortColumn","sortAsc","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","index","ColumnOrder","onSortEnd","e","oldIndex","newIndex","PreferencesModal","states","forEach","isChecked","checked","_this3","toAppend","checkAll","setAllRows","arrayMove","_this4","onClickAll","toggleOne","ColumnOrder_ColumnOrder","drag","tablePreferencesOpen","showPreferences","onSavePreferences","sortBy","onDrag","active","onDrop","files","dataTransfer","getData","hostname","onDropFiles","onDropSourceURL","args","FolderRow_FolderRow","onRowClick","onRenameFolder","DocumentRow_DocumentRow","handleClick","tablePane","es","rowCount","rowHeight","rowRenderer","HeaderRow_HeaderRow","dist_es","disableClick","onDragEnter","onDragLeave","PreferencesModal_PreferencesModal","Document","isStacked","fileCount","Folder","itemsPerRow","fromIndex","itemsInRow","renderedItems","rowIdx","Folder_Folder","onTileClick","Document_Document","file_count","gridPane","floor","ceil","disableFiledrop"],"mappings":"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","file":"static/js/profile.ee00d1aa.chunk.js","sourcesContent":["// Columns available in all views\nconst COLUMNS_GENERAL = [\n  // Aggregate fields\n  // 'agg_document',\n\n  // Common fields\n  'author',\n  'title',\n  'language',\n  'date_freeform',\n  'uploaded_at',\n  'last_edit_at',\n  'last_edit_by',\n  'my_last_edit_at',\n  'annotations',\n  'my_annotations',\n  'public_visibility',\n  'status_ratio',\n  'cloned_from',\n  'has_clones'\n];\n\n// Columns specific to SHARED_WITH_ME view\nconst COLUMNS_SHARED_WITH_ME = [\n  'owner',\n  'shared_by',\n  'access_level'\n];\n\nexport const COLUMNS = COLUMNS_GENERAL.concat(COLUMNS_SHARED_WITH_ME);\n\n// Labels to use for fields\nexport const HEADER_NAMES = {\n  // agg_document    : 'Document',\n\n  author            : 'Author',\n  title             : 'Title',\n  language          : 'Language',\n  date_freeform     : 'Date',\n  uploaded_at       : 'Uploaded at',\n  last_edit_at      : 'Last edit',\n  last_edit_by      : 'Last edit by',\n  my_last_edit_at   : 'My last edit',\n  annotations       : 'Annotations',\n  my_annotations    : 'My annotations',\n  public_visibility : 'Visibility',\n  status_ratio      : 'Verification ratio',\n  cloned_from       : 'Cloned from',\n  has_clones        : 'Has clones',\n\n  owner             : 'Document owner',\n  shared_by         : 'Shared by',\n  access_level      : 'Access'\n};\n\n// Relative width requirements per column (XL, L, M, S)\nexport const COLUMN_WIDTH = {\n  agg_document    : 'XL',\n\n  author            : 'M',\n  title             : 'L',\n  language          : 'M',\n  date_freeform     : 'M',\n  uploaded_at       : 'M',\n  last_edit_at      : 'M',\n  last_edit_by      : 'M',\n  my_last_edit_at   : 'M',\n  annotations       : 'M',\n  my_annotations    : 'M',\n  public_visibility : 'M',\n  status_ratio      : 'M',\n  cloned_from       : 'M',\n  has_clones        : 'S',\n\n  owner             : 'M',\n  shared_by         : 'M',\n  access_level      : 'M'\n};\n\nexport const AGGREGATE_COLUMNS = {\n  agg_document: [ 'author', 'document' ]\n};\n\n// Static helper methods \nexport class Columns {\n\n  static getSpan(field) {\n    const w = COLUMN_WIDTH[field];\n    if (w === 'XL') \n      return 6;\n    else if (w === 'L')\n      return 4;\n    else if (w === 'M')\n      return 2;\n    else if (w === 'S')\n      return 1;\n  }\n\n  /** Expands agg_ columns to those that are required to build them **/\n  static expandAggregatedColumns(columns) {\n    return columns.reduce((result, field) => {\n      if (field.startsWith('agg_'))\n        result = result.concat(AGGREGATE_COLUMNS[field]);\n      else\n        // Just append\n        result.push(field);\n\n      return result;\n    }, []);\n  }\n\n  /** Removes the columns that are not applicable in the given view **/\n  static filterByView(columns, view) { \n    if (view === 'MY_DOCUMENTS')\n      // Remove columns specific to 'Shared With Me'\n      return columns.filter(c => !COLUMNS_SHARED_WITH_ME.includes(c));\n    else\n      // All\n      return columns; \n  }\n\n}","import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nexport default class Modal extends Component {\n\n  render() {\n    return (\n      <div className={`clicktrap ${this.props.className}`}>\n        <div className=\"modal-wrapper\">\n          <Draggable handle=\".modal-header\">\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <h1 className=\"title\">{this.props.title}</h1>\n                <button\n                  className=\"close nostyle\"\n                  onClick={this.props.onClose}>&#xe897;</button>\n              </div>\n\n              <div className=\"modal-body\">\n                {this.props.children}\n              </div>\n            </div>\n          </Draggable>\n        </div>\n      </div>\n    )\n  }\n\n}\n","export default class Selection {\n    \n  constructor(selectedItems) {\n    if (selectedItems)\n      this._selection = selectedItems;\n    else \n      this._selection = [];\n  }\n\n  isEmpty() {\n    return this._selection.length === 0;\n  }\n\n  includes(item) {\n    return this._selection.includes(item);\n  }\n\n  isSingleSelection() {\n    return this._selection.length === 1;\n  }\n\n  isSingleFolder() {\n    return this._selection.length === 1 && this._selection[0].type === 'FOLDER';\n  }\n\n  isSingleDocument() {\n    return this._selection.length === 1 && this._selection[0].type === 'DOCUMENT';\n  }\n\n  includesText() {\n    const withText = this._selection.filter(item => {\n      return item.filetypes && item.filetypes.find(ft => ft.startsWith(\"TEXT\"));\n    });\n    return withText.length > 0;\n  }\n\n  get(idx) {\n    return this._selection[idx];\n  }\n\n  getItems() {\n    return this._selection;\n  }\n\n  getFolders() {\n    return this._selection.filter(i => i.type === 'FOLDER');\n  }\n\n  getDocuments() {\n    return this._selection.filter(i => i.type === 'DOCUMENT');\n  }\n\n  /** Immutable - returns a new selection object **/\n  selectItem = (item, isCtrlPressed) => {\n    if (isCtrlPressed) {\n      const thisIdx = this._selection.indexOf(item);\n      const isSelected = thisIdx > -1;\n    \n      let cloned = this._selection.slice(0);\n\n      // Toggle this item, leave the rest of the selection unchanged\n      if (isSelected) {\n        cloned.splice(thisIdx, 1);\n      } else {\n        cloned.push(item);\n      }      \n\n      return new Selection(cloned);\n    } else {\n      // Select just this item\n      return new Selection([ item ]);\n    }\n  }\n\n  /**\n   * Range selection: SHIFT + click. \n   * \n   * Behavior follows Mac conventions, cf. \n   * https://stackoverflow.com/questions/2959887/algorithm-for-shift-clicking-items-in-a-collection-to-select-them\n   * \n   * Immutable - returns a new selection object\n   */\n  selectRange = (allItems, toIdx) => {\n    const selectedIndices = this._selection.map(item => {\n      return allItems.indexOf(item);\n    });   \n    \n    const minIdx = Math.min.apply(null, selectedIndices);\n    const maxIdx = Math.max.apply(null, selectedIndices);\n\n    const isOutside = (toIdx > maxIdx) || (toIdx < minIdx);\n\n    const slice = (from, to) => allItems.slice(from, to + 1);\n\n    if (isOutside && toIdx > maxIdx)\n      // Expand selection downwards\n      return new Selection(slice(minIdx, toIdx));\n    else if (isOutside)\n      // Expand selection upwards\n      return new Selection(slice(toIdx, maxIdx));\n    else\n      // Fill from topmost\n      return new Selection(slice(minIdx, toIdx));\n  }\n\n  /** \n   * Helper function that handles click/SHIFT+click/CTRL+click selection \n   * on an item and returns a new selection, if valid.\n   */\n  handleClick(evt, item, idx, allItems) {\n    const isShift = evt.getModifierState(\"Shift\");\n    const isCtrl = evt.getModifierState(\"Control\");\n    \n    // Is this a selection or deselection?\n    const isSelectAction = \n      (isShift || isCtrl || ! this.includes(item));\n\n    if (isSelectAction) {\n      const newSelection = isShift ?\n        this.selectRange(allItems, idx) :\n        this.selectItem(item, isCtrl);\n\n      evt.preventDefault();\n      return newSelection;\n    }\n  }\n  \n}","import React, { Component } from 'react';\n\nexport default class Avatar extends Component {\n\n  // https://medium.com/@pppped/compute-an-arbitrary-color-for-user-avatar-starting-from-his-username-with-javascript-cd0675943b66\n  stringToHslColor(str) {\n    let hash = 0;\n    for (let i=0; i<str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash % 360;\n  }\n\n  render() {\n    const color = this.props.username ? `hsl(${this.stringToHslColor(this.props.username)}, 35%, 65%)` : '#e2e2e2';\n\n    return (\n      <div className=\"avatar\" style={{ backgroundColor: color }}>\n        <div className=\"inner\">\n          { this.props.username && this.props.username.charAt(0).toUpperCase() }\n        </div>\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport posed from 'react-pose';\n\nconst AnimatedDiv = posed.div({\n  open:   { \n    bottom: '30px',\n    transition: {\n      ease: 'easeOut',\n      duration:200\n    }\n  },\n  closed: { bottom: '-140px' }\n});\n\nexport default class FiledropHint extends Component {\n\n  state = { \n    visible: false \n  };\n\n  componentDidMount() {\n    this.setState({ visible: true });\n  }\n\n  render() {\n    return (\n      <div className=\"filedrop-hint\">\n        <AnimatedDiv className=\"inner\" pose={this.state.visible ? 'open' : 'closed'}>\n          <span className=\"icon\">&#xf0ee;</span>\n          <p className=\"instructions\">\n            Drop files or IIIF manifest URLs to add them to your workspace.\n          </p>\n          <p className=\"supported\">\n            Supported formats: plain text (UTF-8), TEI/XML, image files, CSV (UTF-8)\n          </p>\n        </AnimatedDiv>\n      </div>\n    )\n  }\n\n}\n","/** Icons for possible content type values **/\nconst ICONS = {\n  TEXT_PLAIN   : 'icon_text.png',\n  TEXT_TEIXML  : 'icon_tei.png',\n  IMAGE_UPLOAD : 'icon_image.png',\n  IMAGE_IIIF   : 'icon_iiif.png',\n  DATA_CSV     : 'icon_csv.png',\n  MAP_WMTS     : 'icon_map.png',\n  MAP_XYZ      : 'icon_map.png' \n};\n\nexport default class TypeIcons {\n\n  static get = docType => ICONS[docType];\n\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { render } from 'react-dom';\nimport Modal from '../../../common/Modal';\n\nclass ForkingModal extends Component {\n\n  state = {\n    errorMessage: null\n  }\n\n  componentDidMount() {\n    const minWait = new Promise(resolve => {\n      // Wait at least a few seconds, so the user can read the popup\n      setTimeout(() => resolve(), this.props.minWait);\n    });\n  \n    const op = \n      axios.post(`/api/clone/document/${this.props.documentId}`).catch(error => {\n        if (error.response.status === 409) // HTTP conflict - per convention, quota exceeded\n          this.setState({ errorMessage: 'Oops. Could not create copy - the document exceeds your storage quota.' })\n        else\n          this.setState({ errorMessage: 'Ooops. Something went wrong.' });\n  \n        throw error;\n      });\n\n    Promise.all([minWait, op]).then(() => {\n      this.props.onComplete();\n    });\n  }\n\n  render() {\n    return (\n      <Modal className=\"now-forking\">\n        <h2>Cloning Document</h2>\n        <div className={ this.state.errorMessage ? \"error-icon\" : \"wait-spinner\"} />\n        { this.state.errorMessage ? \n          <div>\n            <p className=\"error\">{this.state.errorMessage}</p> \n            <button className=\"btn red\" onClick={this.props.onComplete}>Close</button>\n          </div> :\n\n          <p>Please wait while I'm creating a copy in your workspace.</p>\n        }\n      </Modal>\n    );\n  }\n\n}\n\nexport const forkDocument = id => {\n  return new Promise(resolve => {\n    const container = document.createElement('div');\n    document.body.appendChild(container);\n\n    const onComplete = () => {\n      container.remove();\n      resolve();\n    }\n\n    render(\n      <ForkingModal \n        documentId={id} \n        minWait={3000}\n        onComplete={onComplete} />, container);\n  });\n} \n\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport Modal from '../../../common/Modal';\n\nclass SendMessageForm extends Component {\n\n  state = {\n    message: ''\n  }\n\n  onChange = evt => {\n    this.setState({ message: evt.target.value });\n  }\n\n  render() {\n    return(\n      <Modal \n        className=\"message-form-container\"\n        title=\"Send Message\"\n        onClose={this.props.onCancel}>\n        <div>\n          <dl>\n            <dt>\n              <label htmlFor=\"recipient\">To</label>\n            </dt>\n            <dd>\n              <input \n                disabled\n                type=\"text\" \n                id=\"recipient\" \n                value={this.props.recipient} />\n            </dd>\n          </dl>\n\n          <dl>\n            <dt>\n              <label htmlFor=\"message\">Message</label>\n            </dt>\n            <dd>\n              <textarea \n                rows={10} \n                value={this.state.message}\n                onChange={this.onChange} />\n            </dd>\n          </dl>\n\n          <div className=\"buttons\">\n            <button\n              className=\"btn outline small\" \n              onClick={this.props.onCancel}>Cancel</button>\n\n            <button\n              className=\"btn small\"\n              onClick={() => this.props.onSend(this.state.message)}>Send</button>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n\n}\n\nexport const sendMessage = (from, to) => {\n\n  return new Promise(resolve => {\n    const container = document.createElement('div');\n    document.body.appendChild(container);\n\n    const onCancel = () => {\n      container.remove();\n      resolve();\n    }\n\n    const onSend = message => {\n      axios.post('/api/send-message', { to, message }).then(() => {\n        container.remove();\n        resolve();\n      });\n    }\n\n    render(\n      <SendMessageForm \n        recipient={to} \n        onSend={onSend}\n        onCancel={onCancel} />, container\n    );\n  });\n\n}","import { forkDocument } from './forkDocument';\nimport { sendMessage } from './sendMessage';\n\n/** \n * Wraps all operations into one object so that \n * we can import them in one go.\n */\nexport default {\n  forkDocument,\n  sendMessage\n};","import Selection from '../common/documents/Selection';\n\nconst DEFAULT_STATE = {\n  me             : null, // Login identity\n  visitedAccount : null, // Visited profile\n\n  presentation   : 'TABLE',\n\n  page: {\n    breadcrumbs   : [],\n    readme: null, \n    total_count: 0,\n    items: []\n  },\n\n  selection: new Selection(),\n\n  table_config  : {\n    columns: [\n      \"author\",\n      \"title\",\n      \"language\",\n      \"date_freeform\",\n      \"uploaded_at\",\n      \"last_edit_at\"\n    ],\n    sorting: { by: null, asc: true }\n  },\n\n  busy           : true\n}\n\nexport const initialState = () => {\n\n  const stored = {};\n\n  // Helper\n  const addIfDefined = (key) => {\n    const value = localStorage.getItem(`recogito.workspace.${key}`);\n    if (value) stored[key] = JSON.parse(value);\n  }\n\n  ['view', 'presentation', 'table_config'].map(addIfDefined)\n\n  return { ...DEFAULT_STATE, ...stored };\n}\n\nexport const persistState = (key, value) => {\n  const prefixed = `recogito.workspace.${key}`\n  localStorage.setItem(prefixed, JSON.stringify(value));\n}","import React from 'react';\nimport ActivityHistory from '../../common/account/ActivityHistory';\nimport IdentityInfo from '../../common/account/IdentityInfo';\nimport TopCollaborators from '../../common/account/TopCollaborators';\n\nconst Sidebar = props => {\n\n  return (\n    <div className=\"sidebar\"> \n      <div className=\"section identity\">\n        <IdentityInfo account={props.account} />\n      </div>\n\n      { props.me && props.me.feature_toggles && props.me.feature_toggles.includes(\"send-message\") &&\n        <div className=\"section send-message\">\n          <button className=\"btn\" onClick={props.onSendMessage}>\n            <span className=\"icon\">&#xf0e0;</span>\n            <span className=\"label\">Send Message</span>\n          </button>\n        </div>\n      }\n\n      <ActivityHistory \n        className=\"section\" \n        width={237}\n        height={55}\n        fill=\"#4483c4\"\n        stats={props.account && props.account.stats} />\n\n      <TopCollaborators \n        className=\"section collaborators\"\n        title=\"Top collaborators\"\n        username={props.account && props.account.username} />\n    </div>\n  );\n\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\n\nexport default class TopBar extends Component {\n\n  notLoggedIn() {\n    return (\n      <div className=\"not logged-in\">\n        <a href=\"/login\">Log in</a>&nbsp; | &nbsp;New to Recogito? &nbsp;<a href=\"/\">Learn more</a>\n      </div>\n    )\n  }\n\n  loggedInAs() {\n    const name = this.props.me.real_name ? this.props.me.real_name : this.props.me.username;\n\n    return (\n      <div className=\"logged-in\">\n        Logged in as <a href={`/${this.props.me.username}`}>{name}</a>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"top-bar\">\n          <div className=\"top-left\">\n            <a href=\"/my\" className=\"home\">\n              <img src=\"/assets/images/logo-recogito-small.png\" alt=\"Recogito logo\" />\n            </a>\n            { this.props.me && this.props.me.logged_in && <a href=\"/my\">My Workspace</a> }\n            <a href=\"/help\">Help</a>\n            <a href=\"/help/about\">About</a>\n          </div>\n\n          <div className=\"top-right\">\n            {this.props.me && \n              this.props.me.logged_in ? this.loggedInAs() : this.notLoggedIn()\n            }\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}","import React from 'react';\nimport Breadcrumbs from '../common/header/Breadcrumbs';\nimport { CSSTransition } from 'react-transition-group';\nimport GridPane from '../common/documents/grid/GridPane';\nimport HeaderIcon from '../common/header/HeaderIcon';\nimport Readme from '../common/documents/Readme';\nimport Sidebar from './sidebar/Sidebar';\nimport TablePane from '../common/documents/table/TablePane';\nimport TopBar from './top/TopBar';\n\nconst Profile = props => {\n\n  // Forking only for single document selection + public document\n  const canFork = props.selection.isSingleDocument() && props.selection.get(0).public_visibility === 'PUBLIC';\n\n  return (\n    <React.Fragment>\n      <TopBar me={props.me} />\n\n      <Sidebar \n        me={props.me}\n        account={props.visitedAccount}\n        onSendMessage={props.onSendMessage} />\n\n      <div className=\"main-content\">\n        <Breadcrumbs \n          label=\"Public Documents\"\n          path={props.page.breadcrumbs}\n          docCount={props.page.total_docs} />\n\n        <div className=\"main-header-icons\">\n          <CSSTransition\n            in={canFork} \n            timeout={200} \n            classNames=\"fork-button\">\n\n            <button\n              className=\"btn fork-button\"\n              onClick={props.onFork}> \n              <span className=\"icon\">&#xf126;</span>             \n              <span className=\"label\">Clone to my workspace</span>\n            </button>\n          </CSSTransition>\n\n          <HeaderIcon\n            className=\"presentation-toggle stroke7\"\n            icon={(props.presentation === 'TABLE') ? '\\ue645' : '\\ue636'} \n            onClick={props.onTogglePresentation} />\n        </div>\n\n        { props.visitedAccount && props.page.readme && \n          <Readme content={props.page.readme} />\n        }\n\n        { props.visitedAccount && props.page.items.length === 0 &&\n          <div className=\"no-public-documents\">\n            {props.visitedAccount.username} has not shared any documents yet\n          </div>\n        }\n\n        { props.visitedAccount && props.page.items.length > 0 && props.presentation === 'TABLE' &&\n          <TablePane\n            items={props.page.items}\n            config={props.tableConfig}\n            selection={props.selection}\n            busy={props.busy}\n            enableFiledrop={false} \n            onSelect={props.onSelect}\n            onSort={props.onSortTable}\n            onChangeColumnConfig={props.onChangeColumnConfig} />\n        }\n\n        { props.visitedAccount && props.page.items.length > 0 && props.presentation === 'GRID' &&\n          <GridPane\n            items={props.page.items}\n            selection={props.selection}\n            busy={props.busy}\n            enableFiledrop={false} \n            onSelect={props.onSelect} />         \n        }\n      </div>\n    </React.Fragment>\n  );\n\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport { Columns } from '../common/documents/table/Columns';\nimport operations from './operations';\nimport { initialState, persistState } from './initialState';\nimport Profile from './Profile';\nimport Selection from '../common/documents/Selection';\n\nimport '../../assets/style/profile/index.scss';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = initialState();\n\n    this._profileOwner = (process.env.NODE_ENV === 'development') ? 'pelagios3' : window.location.pathname.substring(1);\n    this._rootEl = document.getElementById('app');\n\n    window.onhashchange = this.refreshPage;\n  }\n\n  componentDidMount() {\n    this._rootEl.addEventListener('keydown', this.onKeydown, false);\n    this._rootEl.addEventListener('mousedown', this.onMousedown, false);\n    \n    const a = axios.get(`/api/account/${this._profileOwner}`).then(r => {\n      this.setState({ visitedAccount: r.data });\n    });\n\n    const b = axios.get('/api/me').then(r => {\n      this.setState({ me: r.data });\n    });\n\n    Promise.all([a, b]).then(() => this.refreshPage());\n  }\n\n  /** Remveo deselect listeners **/\n  componentWillUnmount() {\n    this._rootEl.removeEventListener('keydown', this.onKeydown, false);\n    this._rootEl.removeEventListener('mousedown', this.onMousedown, false);\n  }\n\n  /** Clear selection on ESC key **/\n  onKeydown = evt => {\n    if (evt.which === 27) \n      this.setState({ selection: new Selection() });\n    else if (evt.which === 46 && !this.state.selection.isEmpty())\n      this.deleteSelection();\n  }\n\n  /** Clear selection on click ouside the document pane **/\n  onMousedown = evt => {\n    const isClickOutside = !(\n      document.querySelector('.documents-pane').contains(evt.target) ||\n      document.querySelector('.main-header-icons').contains(evt.target)\n    );\n\n    if (isClickOutside) this.setState({ selection: new Selection() });\n  }\n\n  refreshPage = () => {\n    this.setState({ busy: true });\n\n    const folderId = document.location.hash.substring(1);\n\n    const path = folderId ? \n      `${this._profileOwner}/${folderId}` :\n      `${this._profileOwner}`;\n\n    const config = this.state.presentation === 'GRID' ? null :\n      {\n        columns: Columns.expandAggregatedColumns(this.state.table_config.columns),\n        sort: this.state.table_config.sorting.by ? this.state.table_config.sorting : null\n      }\n\n    return axios.post(`/api/directory/${path}`, config).then(r => {\n      const { breadcrumbs, readme, total_count, items } = r.data;\n      this.setState(prev => {\n        return { \n          page: {\n            ...prev.page,\n            ...{\n              breadcrumbs,\n              readme,\n              total_count,\n              items\n            }\n          },\n          busy: false\n        }\n      })\n    });\n  }\n\n  togglePresentation = () => {\n    this.setState(prev => { \n      const presentation = (prev.presentation === 'TABLE') ? 'GRID' : 'TABLE';\n      persistState('presentation', presentation);\n      return { presentation: presentation };\n    });\n  }\n\n  select = selection => {\n    this.setState({ selection: selection });\n  }\n\n  sortTable = (sorting) => {\n    this.setState(prev => {\n      const config = { ...prev.table_config, ...{ sorting: sorting } };\n      persistState('table_config', config);\n      return { table_config: config };\n    }, () => {\n      this.refreshPage();\n    });      \n  }\n\n  changeColumnConfig = columns => {\n    this.setState(prev => { \n      const config = {...prev.table_config, ...{ columns: columns } };\n      persistState('table_config', config);\n      return { table_config: config };\n    });\n  }\n\n  sendMessage = () => {\n    const sender = this.state.me.username;\n    const recipient = this.state.visitedAccount.username;\n    operations.sendMessage(sender, recipient);\n  }\n\n  forkSelection = () =>  {\n    const { selection } = this.state;\n\n    this.setState({ busy: true });\n\n    // Currently called *ONLY* with single document selections, but just in case\n    if (selection.isSingleDocument()) {\n      const doc = selection.get(0);\n      operations.forkDocument(doc.id).then(() => this.setState({ busy: false }));        \n    }\n  }\n\n  render() {\n    return (\n      <Profile \n        me={this.state.me} \n        visitedAccount={this.state.visitedAccount} \n        presentation={this.state.presentation}\n        page={this.state.page} \n        tableConfig={this.state.table_config}\n        selection={this.state.selection}\n        busy={this.state.busy} \n        onTogglePresentation={this.togglePresentation} \n        onSelect={this.select}\n        onSort={this.sortTable}\n        onChangeColumnConfig={this.changeColumnConfig} \n        onSendMessage={this.sendMessage}\n        onFork={this.forkSelection} />\n    );\n  }\n}\n\nrender(<App />, document.getElementById('app'));\n","import React from 'react';\n\nconst HeaderIcon = props => {\n\n  return (\n    <div\n      className={`header-icon ${props.className}`}\n      onClick={props.onClick}>\n      {(props.link) ? \n        <a href={props.link} className=\"icon inner\">\n          {props.icon}\n        </a> :\n\n        <span className=\"icon inner\">\n          {props.icon}\n        </span>\n      }\n    </div>\n  );\n\n}\n\nexport default HeaderIcon;","import React from 'react';\n\nconst VIEW_LABELS = {\n  MY_DOCUMENTS: 'My Documents',\n  SHARED_WITH_ME: 'Shared with me',\n  SEARCH: 'Search results'\n}\n\nconst Breadcrumbs = props => {\n  const title = props.view ? VIEW_LABELS[props.view] : props.label;\n\n  return (\n    <div className=\"breadcrumbs\">\n      <h2>\n        <a className=\"root\" href=\"#\">{title}</a>\n        {props.path && props.path.map(b => \n          <a className=\"folder\" href={`#${b.id}`} key={b.id}>{b.title}</a>\n        )}\n      </h2>\n      \n      { props.docCount !== null && props.docCount !== undefined &&\n        <span className=\"count\">{`(${props.docCount})`}</span> }\n\n      { props.children }\n    </div>\n  );\n\n}\n\nexport default Breadcrumbs;","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ContentEditable from 'react-sane-contenteditable';\n\nconst INITIAL_STATE = {\n  editing: false,\n  modifiedContent: null\n}\n\nexport default class Readme extends Component {\n\n  state = {};\n\n  onKeydown = (evt) => {\n    if (evt.which === 27) // Esc\n      this.onCancel(); \n    else if (evt.ctrlKey && evt.which === 13) // Ctrl+Enter \n      this.onSave();\n  }\n\n  onEdit() {\n    document.addEventListener('keydown', this.onKeydown, false);\n    this.setState({ editing: true });\n  }\n\n  onChange(_, value) {\n    this.setState({ modifiedContent: value });\n  }\n\n  onDelete() {\n    document.removeEventListener('keydown', this.onKeydown, false);\n    this.props.onDelete && this.props.onDelete();\n  }\n\n  onSave() {\n    document.removeEventListener('keydown', this.onKeydown, false);\n    this.props.onUpdate && this.props.onUpdate(this.state.modifiedContent);\n    this.setState(INITIAL_STATE);\n  }\n\n  onCancel() {\n    document.removeEventListener('keydown', this.onKeydown, false);\n    if (typeof this.props.content === 'boolean')\n      this.onDelete();\n    else\n      this.setState(INITIAL_STATE);\n  }\n\n  renderView(content) {\n    return (\n      <div className=\"readme\">\n        <div className=\"wrapper\">\n          <div className=\"textbox\">\n            <ReactMarkdown source={content} />       \n          </div>\n\n          {this.props.onUpdate && this.props.onDelete &&\n            <span className=\"buttons modify\">\n              <button\n                className=\"icon nostyle\"\n                title=\"Edit\"\n                onClick={this.onEdit.bind(this)}>&#xf040;</button>\n            </span>\n          }\n        </div>\n      </div>\n    )\n  }\n\n  renderEdit(content) {\n    return (\n      <div className=\"readme editing\">\n        <div className=\"wrapper\">\n          <ContentEditable \n            tagName=\"div\"\n            className=\"textbox\"\n            content={content} \n            editable={true} \n            multiLine={true}\n            onChange={this.onChange.bind(this)}/>            \n\n          <div className=\"editbar\">\n            <span className=\"hint\">Supports styling with <a href=\"# \">Markdown</a></span>\n            <span className=\"buttons\">\n              <button\n                className=\"label nostyle\"\n                onClick={this.onDelete.bind(this)}>Delete description</button>\n\n              <button \n                className=\"icon nostyle\"\n                onClick={this.onSave.bind(this)}>&#xf00c;</button>\n\n              <button \n                className=\"icon nostyle\"\n                onClick={this.onCancel.bind(this)}>&#xf00d;</button>\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const editOnOpen = typeof this.props.content === 'boolean';\n\n    if (editOnOpen)\n      document.addEventListener('keydown', this.onKeydown, false);\n\n    const content = editOnOpen ? '' : \n      (this.state.modifiedContent ? this.state.modifiedContent : this.props.content);\n\n    return (this.state.editing || editOnOpen) ? this.renderEdit(content) : this.renderView(content);\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class IdentityInfo extends Component {\n\n  formatURL(url) {\n    return url.replace(/^https?:\\/\\//i, '');\n  }\n\n  render() {\n    const dataAvailable = \n      this.props.account && \n      this.props.account.username &&\n      this.props.account.member_since;\n      \n    return (\n      <div className=\"identity\">\n        <div className=\"user\">\n          <Avatar username={dataAvailable && this.props.account.username} />\n\n          <h1>\n            { dataAvailable ?\n                ((this.props.account.real_name) ? \n                  this.props.account.real_name : this.props.account.username) :\n\n                (<span className=\"placeholder\" />) }\n          </h1>\n\n          <p className=\"member-since\">\n            { dataAvailable ?\n              <React.Fragment>\n                Joined on { new Intl.DateTimeFormat('en-GB', {\n                  year : 'numeric',\n                  month: 'short',\n                  day  : '2-digit'\n                }).format(new Date(this.props.account.member_since)) }\n              </React.Fragment> : <span className=\"placeholder\" />\n            }\n          </p>\n        </div>\n\n        <div className=\"user-extended\">\n          { dataAvailable && this.props.account.bio &&\n            <p className=\"bio\">{this.props.account.bio}</p> }\n\n          { dataAvailable && this.props.account.website && \n            <p className=\"homepage\">\n              <a href={this.props.account.website}>{this.formatURL(this.props.account.website)}</a>\n            </p>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Bar, BarChart, CartesianGrid, XAxis } from 'recharts';\nimport NumberFormat from 'react-number-format';\n\nconst LINE_STYLE = {\n  stroke: '#c2c2c2', \n  strokeWidth:1\n}\n\nconst AXIS_STYLE = {\n  fontSize:\"12px\",\n  color:\"#3f3f3f\"\n}\n\nconst WEEK = 3600000 * 24 * 7; // A week in milliseconds\n\nconst tickFormatter = (tick) => new Intl.DateTimeFormat('en-GB', {\n  month: 'short'\n}).format(new Date(tick));\n\nexport default class ActivityHistory extends Component {\n\n  /** Helper that generates an empty time series of N buckets with value 0 */\n  createEmptySeries(n, toTimestamp) {\n    const empty = new Array(n);\n    empty.fill(0); // Needs to contain *something* for .reduce to work\n\n    const timestamps = empty.reduce((arr, _) => {\n      const last = arr[arr.length - 1];\n      arr.push(last - WEEK);\n      return arr;\n    }, [ toTimestamp - WEEK ]).reverse();\n\n    return timestamps.map(timestamp => {\n      return { timestamp: timestamp, value: 0 };\n    });\n  }\n\n  padTimeseries(t) {\n    const toTime = t.length > 0 ? t[0].timestamp : new Date().getTime();\n    const padding = this.createEmptySeries(19 - t.length, toTime);\n    return padding.concat(t);\n  }\n\n  computeChart() {\n    // Data comes as ISO strings - convert\n    const timeseries = this.props.stats.over_time.map(t => {\n      return { timestamp: Date.parse(t.date), value: t.value };\n    });\n\n    if (timeseries.length < 20) {\n      return this.padTimeseries(timeseries);\n    } else {\n      return timeseries;\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.className ? \n        `activity-widget ${this.props.className}` : \"activity-widget\"}>\n\n        <h2>Activity \n          {this.props.stats && \n            <span className=\"count\">\n              <NumberFormat \n                displayType=\"text\"\n                value={this.props.stats.total_contributions}\n                thousandSeparator={true} /> edits\n            </span>\n          }\n        </h2>\n\n        {this.props.stats &&\n          <BarChart \n            width={this.props.width} \n            height={this.props.height} \n            barCategoryGap={1.5}\n            data={this.computeChart()} >\n\n            <CartesianGrid \n              strokeDasharray=\"3\" \n              horizontal={false}/>\n\n            <XAxis \n              type=\"number\"\n              dataKey=\"timestamp\"\n\n              axisLine={LINE_STYLE} \n\n              tick={AXIS_STYLE}\n              tickSize={4}\n              tickCount={6}\n              tickLine={LINE_STYLE}\n              tickFormatter={tickFormatter}\n\n              height={20}\n              domain={['dataMin', 'dataMax']}\n              padding={{ left: 5, right: 5 }} />\n\n            <Bar \n              dataKey=\"value\" \n              fill={this.props.fill} />\n\n          </BarChart>\n        }\n      </div>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Avatar from './Avatar.jsx';\n\nexport default class TopCollaborators extends Component {\n\n  state = {\n    collaborators: null\n  }\n\n  componentWillReceiveProps() {\n    this.fetchCollaborators();\n  }\n\n  fetchCollaborators() {\n    if (this.props.username && !this.state.collaborators)\n      axios\n        .get(`/api/account/${this.props.username}/collaborators`)\n        .then(result => this.setState({ collaborators: result.data }));\n  }\n\n  render() {\n    const { collaborators } = this.state;\n    return (\n      <React.Fragment>\n        {collaborators && collaborators.length > 0 &&\n          <div className={this.props.className ? `collaborator-list ${this.props.className}` : 'collaborator-list'}>\n            <h2>{this.props.title}</h2>\n            <ul>\n              {this.state.collaborators.map(user => \n                <li key={user.username}>\n                  <a href={`/${user.username}`} title={user.username}>\n                    <Avatar username={user.username} />\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n      </React.Fragment>\n    )\n  }\n\n}","import { Component } from 'react';\nimport { Columns } from '../Columns';\n\nexport default class BaseRowComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.updateTotalRowSpan(props);\n  }\n\n  componentWillReceiveProps(next) {\n    this.updateTotalRowSpan(next);\n  }\n\n  /** Updates total unit width requirement for current row layout **/\n  updateTotalRowSpan(props) {\n    this._totalSpan = props.columns.reduce((total, field) => total + Columns.getSpan(field), 0);\n  }\n\n  getWidth(field) {\n    const span = Columns.getSpan(field);\n    return span / this._totalSpan;\n  }\n  \n}","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport TimeAgo from 'react-timeago';\nimport Icons from './TypeIcons';\nimport BaseRowComponent from './BaseRowComponent';\n\n/** Formatting rules for possible field types **/\nconst FORMATTERS = {\n  language: language => \n    language.toUpperCase(),\n\n  uploaded_at: datetime => \n    new Intl.DateTimeFormat('en-GB', {\n      year : 'numeric',\n      month: 'short',\n      day  : '2-digit'\n    }).format(new Date(datetime)),\n  \n  last_edit_at: datetime => \n    <TimeAgo date={datetime} />,\n\n  my_last_edit_at: datetime => \n    <TimeAgo date={datetime} />,\n  \n    public_visibility: (visibility) => {\n    if (visibility === 'PUBLIC') \n      return ( <span className=\"icon\" title=\"Open to anyone\">&#xf09c;</span> );\n    else if (visibility === 'WITH_LINK')\n      return ( <span className=\"icon\" title=\"Open to anyone with the link\">&#xf0c1;</span> );\n    else \n      return ( <span className=\"icon\" title=\"Private\">&#xf023;</span> );\n  },\n\n  access_level: level => {\n    if (level === 'ADMIN')\n      return ( <span className=\"icon\" title=\"ADMIN\">&#xf0ad;</span> );\n    else if (level === 'WRITE')\n      return ( <span className=\"icon\" title=\"WRITE\">&#xf040;</span> );\n    else\n      return ( <span className=\"icon\" title=\"READ\">&#xf06e;</span> );\n  },\n\n  annotations: annotations =>\n    <NumberFormat \n      displayType=\"text\"\n      value={annotations}\n      thousandSeparator={true} />,\n\n  my_annotations: annotations =>\n    <NumberFormat \n      displayType=\"text\"\n      value={annotations}\n      thousandSeparator={true} />,\n  \n  status_ratio: ratio => {\n    const total = ratio.verified + ratio.unverified + ratio.not_identifiable;\n    const pctGreen = ratio.verified / total * 100;\n    const pctYellow = ratio.not_identifiable / total * 100;\n\n    const labels = {\n      'verified': 'verified',\n      'unverified': 'unverified',\n      'not_identifiable': 'flagged'\n    }\n\n    const tooltip = ['verified', 'unverified', 'not_identifiable'].reduce((tooltip, next) => {\n      const count = ratio[next];\n      if (count === 0)\n        return tooltip;\n      else\n        return `${tooltip} ${count} ${labels[next]},`;\n    }, '').slice(0, -1);\n\n    return (\n      <span className=\"bar\" title={tooltip}>\n        <span className=\"verified\" style={{ width: `${pctGreen}%` }} />\n        <span className=\"not_identifiable\" style={{ width: `${pctYellow}%` }} />\n      </span>\n    )\n  },\n\n  cloned_from: clonedFrom =>\n    <span className=\"cloned-from\">\n      <span>{clonedFrom.username}</span> / <span>{clonedFrom.id}</span>\n    </span>,\n\n  has_clones: hasClones =>\n    <span className=\"has-clones\">{hasClones}</span>\n\n};\n\n/** Rules for aggregate fields **/\nconst AGGREGATE_FIELDS = {\n  agg_document: (item) => (item.author) ?\n                            `${item.author}, ${item.title}` : item.title\n};\n\nexport default class DocumentRow extends BaseRowComponent {\n\n  createAggregateField(url, field) {\n    return (\n      <a \n        key={field}\n        href={url} \n        className={field.substring(4)}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>\n\n        {AGGREGATE_FIELDS[field](this.props.item)}\n      </a>\n    )\n  }\n\n  createField(url, field) {\n    const formatter = FORMATTERS[field];\n\n    const value = this.props.item[field] !== undefined ? \n      (formatter ? formatter(this.props.item[field]) : this.props.item[field]) :\n      ''; // empty value\n\n    return (\n      <a \n        key={field}\n        href={url}\n        className={field}\n        style={{ width: `${100 * super.getWidth(field)}%` }}>{value}</a>\n    )\n  }\n\n  render() {\n    const type = this.props.item.filetypes[0];\n    const url = `document/${this.props.item.id}/part/1/edit`;\n\n    return (\n      <div\n        className={`row${(this.props.selected) ? ' selected' : ''}`}\n        style={this.props.style}\n        onClick={this.props.onClick} >\n        \n        { this.props.columns.map(field => field.startsWith('agg_') ? \n          this.createAggregateField(url, field) : this.createField(url, field)) }\n\n        <span className={`type icon ${type}`}>\n          <img src={`/assets/images/${Icons.get(type)}`} alt={`icon type ${type}`} />\n        </span>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class FolderRow extends Component {\n\n  state = { \n    title: this.props.item.title,\n    editable: false\n  }\n\n  componentWillReceiveProps(next) {\n    this.setState({ \n      title: next.item.title,\n      editable: false\n    });\n  }\n\n  makeEditable = (evt) => {\n    this.setState({ editable: true },\n      () => this._input.select());\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  onChange = (evt) => {\n    this.setState({ title: evt.target.value });\n  }\n\n  onKeyPress = (evt) => {\n    if (evt.which === 13) {\n      this.setState({ editable: false}, \n        () => this.props.onRename(this.props.item, this.state.title));\n    }\n  }\n\n  render() {\n    return (\n      <a\n        href={`#${this.props.item.id}`} \n        style={this.props.style}\n        className={`row folder${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick}>\n\n        <span className=\"folder-title\">\n          { this.state.editable ? \n            <input \n              ref={i => this._input = i}\n              value={this.state.title}\n              onClick={this.makeEditable}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyPress} />\n          : <span\n              className=\"editable\" \n              onClick={this.makeEditable} >{this.state.title}</span> }\n        </span>\n\n        <span className=\"type icon\">&#xf07b;</span>\n      </a>\n    )\n  }\n\n}\n","import React from 'react';\nimport BaseRowComponent from './BaseRowComponent';\nimport { HEADER_NAMES } from '../Columns';\n\nexport default class HeaderRow extends BaseRowComponent {\n\n  render() {\n    return (\n      <div className=\"column-labels\">\n        {this.props.columns.map(field =>\n          <span\n            key={field}\n            style={{ width: `${100 * super.getWidth(field)}%` }}\n            className={`label ${field}`}\n            onClick={this.props.onSort.bind(this, field)}>\n            <span className=\"inner-wrapper\">\n              <span className=\"inner\">\n                {HEADER_NAMES[field] || field}\n              </span>\n              {this.props.sortColumn === field &&\n                <span className=\"sort icon\">\n                  <span className=\"inner\">\n                    {(this.props.sortAsc) ? '\\ue688' : '\\ue682' }\n                  </span>\n                </span>\n              }\n            </span>\n          </span>\n        )}\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { HEADER_NAMES } from '../Columns.js';\n\nconst SortableItem = SortableElement(({ label }) =>\n  <div className=\"card\">{label}</div>\n);\n\nconst SortableList = SortableContainer(({ items }) =>\n  <div className=\"column-order\">\n    {items.map((item, idx) => (\n      <SortableItem key={`card-${idx}`} index={idx} label={HEADER_NAMES[item]} />\n    ))}\n  </div>\n);\n\nexport default class ColumnOrder extends Component {\n\n  render() {\n    return (\n      <SortableList\n        items={this.props.items}\n        onSortEnd={e => this.props.onSortEnd(e.oldIndex, e.newIndex)} />\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { arrayMove } from 'react-sortable-hoc';\nimport Modal from '../../../Modal';\nimport ColumnOrder from './ColumnOrder';\nimport { COLUMNS, HEADER_NAMES } from '../Columns';\n\nexport default class PreferencesModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: props.columns.slice(0)\n    }\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.columns !== this.props.columns)\n      this.setState({ columns: next.columns.slice(0) });\n  }\n\n  /** Computes a map (fieldname -> checked) from the current columns state **/\n  getCheckboxStates(props) {\n    const states = {};\n\n    COLUMNS.forEach(field => {\n      const isChecked = this.state.columns.includes(field);\n      states[field] = isChecked;\n    });\n\n    return states;\n  }\n\n  /** Sets visibility for all rows to the given boolean value **/\n  setAllRows(checked) {\n    const checkAll = () => {\n      const toAppend = \n        COLUMNS.filter(field => !this.state.columns.includes(field));\n\n      this.setState({ columns: this.state.columns.concat(toAppend) });\n    };\n\n    const uncheckAll = () => {\n      this.setState({ columns: [] });\n    };\n\n    if (checked) \n      checkAll();\n    else\n      uncheckAll();\n  }\n\n  /**\n   * Clicking 'ALL' either checks all boxes or - if all are currently\n   * checked, unchecks them.\n   */\n  onClickAll() {\n    const allRowsChecked = COLUMNS.length === this.state.columns.length;\n    if (allRowsChecked)\n      this.setAllRows(false);\n    else\n      this.setAllRows(true);\n  }\n\n  /** Toggles the checkbox with the given name **/\n  toggleOne(name) {\n    this.setState(prev => {\n      const idx = prev.columns.indexOf(name);\n      if (idx < 0)\n        prev.columns.push(name);\n      else\n        prev.columns.splice(idx, 1);        \n    \n      return prev;\n    });\n  }\n\n  onSort(oldIndex, newIndex) {\n    this.setState({\n      columns: arrayMove(this.state.columns, oldIndex, newIndex)\n    });\n  }\n\n  render() {\n    // Helper to create a single checkbox + label row\n    const createRow = field =>\n      <li key={field}>\n        <input\n          type=\"checkbox\"\n          id={field}\n          name={field}\n          checked={this.state.columns.includes(field)}\n          onChange={this.toggleOne.bind(this, field)} />\n        <label htmlFor={field}>{HEADER_NAMES[field]}</label>\n      </li>\n\n    return (\n      <Modal\n        className=\"preferences\"\n        title=\"Configure Columns\"\n        onClose={this.props.onCancel}>\n\n        <div className=\"scroll-pane\">\n          <div className=\"selected-columns\">\n            <button\n              className=\"all nostyle\"\n              onClick={this.onClickAll.bind(this)}>All</button>\n            <ul>\n              { COLUMNS.map(createRow) }\n            </ul>\n          </div>\n\n          <ColumnOrder\n            items={this.state.columns} \n            onSortEnd={this.onSort.bind(this)} />\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            className=\"btn\"\n            onClick={this.props.onSave.bind(this, this.state.columns)}>Save</button>\n\n          <button \n            className=\"btn outline\"\n            onClick={this.props.onCancel}>Cancel</button>\n        </div>\n      </Modal>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\nimport Dropzone from 'react-dropzone'\nimport DocumentRow from './rows/DocumentRow';\nimport FiledropHint from '../FiledropHint';\nimport FolderRow from './rows/FolderRow';\nimport HeaderRow from './rows/HeaderRow';\nimport PreferencesModal from  './preferences/PreferencesModal';\n\nexport default class TablePane extends Component {\n\n  state = {\n    drag: false,\n    tablePreferencesOpen: false,\n  }\n\n  rowRenderer() {\n    return ((args) => {\n      const item = this.props.items[args.index];\n      const selected = this.props.selection && \n        this.props.selection.includes(item);\n\n      return (item.type === 'FOLDER') ?\n        <FolderRow \n          key={args.key} \n          style={args.style} \n          item={item} \n          selected={selected}\n          onClick={e => this.onRowClick(e, item, args.index)} \n          onRename={this.props.onRenameFolder} /> :\n\n        <DocumentRow\n          key={args.key}\n          style={args.style}\n          columns={this.props.config.columns}\n          item={item}\n          selected={selected}\n          onClick={e => this.onRowClick(e, item, args.index)} />\n    });\n  }\n\n  onRowClick(evt, item, idx) {\n    const selection = this.props.selection && \n      this.props.selection.handleClick(evt, item, idx, this.props.items);    \n      \n    if (selection)\n      this.props.onSelect(selection);\n  }\n\n  showPreferences = visible => {\n    this.setState({ tablePreferencesOpen: visible });\n  }\n\n  onSavePreferences = columns => {\n    this.setState({ tablePreferencesOpen: false });\n    this.props.onChangeColumnConfig(columns);\n  }\n\n  sortBy = field => {\n    const asc = this.props.config.sorting.by === field ? \n      ! this.props.config.sorting.asc : true;\n    this.props.onSort({ by: field, asc: asc });\n  }\n\n  onDrag = active => {\n    this.setState({ drag: active });\n  }\n\n  onDrop = (files, _, evt) => {\n    const url = evt.dataTransfer.getData('URL');\n\n    const hostname = url ? (() => {\n      const a = document.createElement('a');\n      a.href = url;\n      return a.hostname;\n    })() : null;\n\n    this.setState({ drag: false });\n\n    if (files.length > 0)\n      this.props.onDropFiles(files);\n    else if (url && hostname !== window.location.hostname) // Require external link\n      this.props.onDropSourceURL(url);\n  }\n\n  render() {\n    const tablePane =\n      <div className=\"documents-pane table-pane\">\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              className=\"virtualized-list\"\n              width={width}\n              height={height}\n              rowCount={this.props.items.length}\n              rowHeight={47}\n              rowRenderer={this.rowRenderer()} />\n          )}\n        </AutoSizer>\n\n        { this.state.drag && \n          <FiledropHint /> }\n        \n        { this.props.busy &&\n           <div className=\"busy-mask\" /> }\n      </div>\n\n    return (\n      <React.Fragment>\n        <div className=\"documents-table-header\">\n          <HeaderRow \n            columns={this.props.config.columns} \n            sortColumn={this.props.config.sorting.by} \n            sortAsc={this.props.config.sorting.asc} \n            onSort={this.sortBy} />\n\n          <button\n            className=\"column-options-btn nostyle icon\"\n            onClick={() => this.showPreferences(true)} >&#xf141;</button>\n        </div>\n\n        { this.props.enableFiledrop ?\n          <Dropzone\n            className=\"dropzone\"\n            disableClick={true}\n            onDragEnter={() => this.onDrag(true)}\n            onDragLeave={() => this.onDrag(false)}\n            onDrop={this.onDrop}>\n            { tablePane }\n          </Dropzone> : tablePane\n        }\n\n        { this.state.tablePreferencesOpen &&\n          <PreferencesModal\n            columns={this.props.config.columns}\n            onCancel={() => this.showPreferences(false)} \n            onSave={this.onSavePreferences} />\n        }\n      </React.Fragment>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Document extends Component {\n\n  render() {\n    const type = this.props.filetypes[0]; // TODO make more clever in the future\n    const isStacked = this.props.fileCount > 1;\n\n    return (\n      <a href={`document/${this.props.id}/part/1/edit`}\n        className={`cell${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick} >\n        \n        <div className=\"inner\">\n          <div className={`item-wrapper${isStacked ? ' stacked' : ''}`}>\n            { isStacked && <div className=\"stack\" /> }\n            <div className={`document ${type}`}>\n              <div className=\"label\">\n                {this.props.title}\n              </div>\n            </div>\n          </div>\n        </div>\n      </a>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Folder extends Component {\n\n  render() {\n    return (\n      <a href={`#${this.props.id}`} \n        className={`cell${(this.props.selected) ? ' selected' : ''}`}\n        onClick={this.props.onClick}>\n\n        <div className=\"inner\">\n          <div className=\"item-wrapper\">\n            <div className=\"folder\">\n              <div className=\"label\">\n                {this.props.title}\n              </div>\n            </div>\n          </div>\n        </div>\n      </a>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone'\nimport { AutoSizer, List } from 'react-virtualized';\nimport Document from './Document';\nimport Folder from './Folder';\nimport FiledropHint from '../FiledropHint';\n\nconst TILE_SIZE = 192;\n\n/**\n * Using the following example:\n *\n * https://stackoverflow.com/questions/46368305/how-to-make-a-list-grid-with-a-responsive-number-of-columns-using-react-virtuali\n * http://plnkr.co/edit/zjCwNeRZ7XtmFp1PDBsc?p=preview\n */\nexport default class GridPane extends Component {\n\n  state = {\n    drag: false\n  }\n\n  onTileClick(evt, item, idx) {\n    const selection = \n      this.props.selection && this.props.selection.handleClick(evt, item, idx, this.props.items);    \n\n    if (selection)\n      this.props.onSelect(selection);\n  }\n\n  rowRenderer(itemsPerRow) {\n    return (args => {\n      const fromIndex = args.index * itemsPerRow;\n      const toIndex = Math.min(fromIndex + itemsPerRow, this.props.items.length);\n      const itemsInRow = toIndex - fromIndex;\n\n      const renderedItems = new Array(itemsInRow).fill(undefined).map((_, rowIdx) => {\n        const idx = rowIdx + fromIndex;\n        const item = this.props.items[idx];\n        const selected = this.props.selection && this.props.selection.includes(item);\n\n        return (item.type === 'FOLDER') ?\n            <Folder\n              key={idx} \n              id={item.id}\n              title={item.title} \n              selected={selected}\n              onClick={e => this.onTileClick(e, item, idx)} /> :\n            \n            <Document\n              key={idx}\n              id={item.id}\n              title={item.title}\n              filetypes={item.filetypes}\n              fileCount={item.file_count}\n              selected={selected}\n              onClick={e => this.onTileClick(e, item, idx)} />\n      });\n\n      if (itemsInRow < itemsPerRow) { // Add dummies to preserve grid layout\n        renderedItems.push(new Array(itemsPerRow - itemsInRow).fill(undefined).map((_, idx) =>\n          <div className=\"cell dummy\" key={`dummy-${idx}`} />\n        ))\n      }\n\n      return (\n        <div\n          key={args.key}\n          style={args.style}\n          className=\"row\">\n          {renderedItems}\n        </div>\n      )\n    });\n  }\n\n  onDrag = (active) => {\n    this.setState({ drag: active });\n  }\n\n  onDrop = (files, _, evt) => {\n    const url = evt.dataTransfer.getData('URL');\n\n    this.setState({ drag: false });\n\n    if (files.length > 0) this.props.onDropFiles(files);\n    else if (url) this.props.onDropSourceURL(url);\n  }\n\n  render() {\n    const gridPane =\n      <AutoSizer>\n        {({ height, width }) => {\n          const itemsPerRow = Math.floor(width / TILE_SIZE);\n          const rowCount = Math.ceil(this.props.items.length / itemsPerRow);\n\n          return (\n            <List\n              className=\"virtualized-grid\"\n              width={width}\n              height={height}\n              rowCount={rowCount}\n              rowHeight={TILE_SIZE}\n              rowRenderer={this.rowRenderer(itemsPerRow)} />\n          )\n        }}\n      </AutoSizer>\n\n    return (\n      <React.Fragment>\n        <div className=\"documents-pane grid-pane\">\n          {this.props.disableFiledrop ? gridPane :\n            <Dropzone\n              className=\"dropzone\"\n              disableClick={true}\n              onDragEnter={() => this.onDrag(true)}\n              onDragLeave={() => this.onDrag(false)}\n              onDrop={this.onDrop}>\n\n              {gridPane}\n\n            </Dropzone>\n          }\n\n          { this.state.drag && <FiledropHint /> }\n        </div>\n      </React.Fragment>\n    )\n  }\n\n}\n"],"sourceRoot":""}